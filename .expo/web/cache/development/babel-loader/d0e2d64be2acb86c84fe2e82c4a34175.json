{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Project Handson\\\\React Native\\\\expo-food-app\\\\navigation\\\\CustomDrawer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SliderBase } from \"react-native-web/dist/index\";\nimport { createDrawerNavigator, DrawerContentScrollView } from \"@react-navigation/drawer\";\nimport { COLORS, FONTS, SIZES, constants, icons, dummyData } from \"../constants\";\nimport { MainLayout } from \"../screens\";\nimport Animated from 'react-native-reanimated';\nvar Drawer = createDrawerNavigator();\n\nvar CustomDrawerItem = function CustomDrawerItem(_ref) {\n  var label = _ref.label,\n      icon = _ref.icon;\n  return React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      height: 30,\n      marginBottom: SIZES.base,\n      paddingLeft: SIZES.radius,\n      borderRadius: SIZES.base\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: icon,\n    style: {\n      width: 20,\n      height: 20,\n      tintColor: COLORS.white\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread({\n      marginLeft: 15,\n      color: COLORS.white\n    }, FONTS.h4),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, label));\n};\n\nvar CustomDrawerContent = function CustomDrawerContent(_ref2) {\n  var _dummyData$myProfile, _dummyData$myProfile2;\n\n  var navigation = _ref2.navigation;\n  return React.createElement(DrawerContentScrollView, {\n    scrollEnabled: true,\n    contentContainerStyle: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: SIZES.radius\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      alignItems: 'flex-start',\n      justifyContent: 'center',\n      backgroundColor: COLORS.green\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      return navigation.closeDrawer();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: icons.cross,\n    style: {\n      height: 35,\n      width: 35,\n      tintColor: COLORS.white\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      marginTop: SIZES.radius,\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      return console.log(\"Profile\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: (_dummyData$myProfile = dummyData.myProfile) == null ? void 0 : _dummyData$myProfile.profile_image,\n    style: {\n      width: 50,\n      height: 50,\n      borderRadius: SIZES.radius\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      marginLeft: SIZES.radius\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.white\n    }, FONTS.h3),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, (_dummyData$myProfile2 = dummyData.myProfile) == null ? void 0 : _dummyData$myProfile2.name), React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.white\n    }, FONTS.body4),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"View your Profile\"))), React.createElement(View, {\n    style: {\n      flex: 1,\n      marginTop: SIZES.padding\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, React.createElement(CustomDrawerItem, {\n    label: constants.screens.home,\n    icon: icons.home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: constants.screens.my_wallet,\n    icon: icons.wallet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: constants.screens.notification,\n    icon: icons.notification,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: constants.screens.favourite,\n    icon: icons.favourite,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 1,\n      marginVertical: SIZES.radius,\n      marginLeft: SIZES.radius,\n      backgroundColor: COLORS.lightGray1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Track your Order\",\n    icon: icons.location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Coupons\",\n    icon: icons.coupon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: constants.screens.cart,\n    icon: icons.cart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Settings\",\n    icon: icons.setting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Invite a Friend\",\n    icon: icons.profile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Help Center\",\n    icon: icons.help,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      marginBottom: SIZES.padding\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, React.createElement(CustomDrawerItem, {\n    label: \"Log Out\",\n    icon: icons.logout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar CustomDrawer = function CustomDrawer() {\n  var _React$useState = React.useState(new Animated.Value(0)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      progress = _React$useState2[0],\n      setProgress = _React$useState2[1];\n\n  var scale = Animated.interpolateNode(progress, {\n    inputRange: [0, 10],\n    outputRange: [1, 0]\n  });\n  var borderRadius = Animated.interpolateNode(progress, {\n    inputRange: [0, 1],\n    outputRange: [0, 26]\n  });\n  var animatedStyle = {\n    borderRadius: borderRadius,\n    transform: [{\n      scale: scale\n    }]\n  };\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'transparent'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Navigator, {\n    screenOptions: {\n      drawerType: 'slide',\n      overlayColor: 'transparent',\n      sceneContainerStyle: {\n        backgroundColor: 'transparent'\n      },\n      drawerStyle: {\n        width: '65%',\n        flex: 1,\n        paddingRight: 20,\n        backgroundColor: 'transparent'\n      }\n    },\n    initialRouteName: \"MainLayout\",\n    drawerContent: function drawerContent(props) {\n      setTimeout(function () {\n        setProgress(props.progress);\n      }, 0);\n      return React.createElement(CustomDrawerContent, {\n        navigation: props.navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Freshmeals\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, function (props) {\n    return React.createElement(MainLayout, _extends({}, props, {\n      drawerAnimationStyle: animatedStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 31\n      }\n    }));\n  })));\n};\n\nexport default CustomDrawer;","map":{"version":3,"sources":["C:/Project Handson/React Native/expo-food-app/navigation/CustomDrawer.js"],"names":["React","SliderBase","createDrawerNavigator","DrawerContentScrollView","COLORS","FONTS","SIZES","constants","icons","dummyData","MainLayout","Animated","Drawer","CustomDrawerItem","label","icon","flexDirection","height","marginBottom","base","paddingLeft","radius","borderRadius","width","tintColor","white","marginLeft","color","h4","CustomDrawerContent","navigation","flex","paddingHorizontal","alignItems","justifyContent","backgroundColor","green","closeDrawer","cross","marginTop","console","log","myProfile","profile_image","h3","name","body4","padding","screens","home","my_wallet","wallet","notification","favourite","marginVertical","lightGray1","location","coupon","cart","setting","profile","help","logout","CustomDrawer","useState","Value","progress","setProgress","scale","interpolateNode","inputRange","outputRange","animatedStyle","transform","drawerType","overlayColor","sceneContainerStyle","drawerStyle","paddingRight","props","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    Image,\r\n    TouchableOpacity,\r\n    SliderBase\r\n} from 'react-native';\r\n\r\nimport {\r\n    createDrawerNavigator,\r\n    DrawerContentScrollView\r\n} from \"@react-navigation/drawer\";\r\n\r\nimport {\r\n    COLORS,\r\n    FONTS,\r\n    SIZES,\r\n    constants,\r\n    icons,\r\n    dummyData\r\n} from \"../constants\";\r\n\r\nimport { MainLayout } from \"../screens\";\r\nimport Animated from 'react-native-reanimated';\r\n\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\n\r\nconst CustomDrawerItem = ({ label, icon }) => {\r\n\r\n    return (\r\n        <TouchableOpacity\r\n            style={{\r\n                flexDirection: 'row',\r\n                height: 30,\r\n                marginBottom: SIZES.base,\r\n                paddingLeft: SIZES.radius,\r\n                borderRadius: SIZES.base\r\n            }}\r\n        //onPress\r\n        >\r\n            <Image\r\n                source={icon}\r\n                style={{\r\n                    width: 20,\r\n                    height: 20,\r\n                    tintColor: COLORS.white\r\n                }}\r\n            />\r\n            <Text\r\n                style={{\r\n                    marginLeft: 15,\r\n                    color: COLORS.white,\r\n                    ...FONTS.h4\r\n\r\n                }}\r\n            >{label}</Text>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nconst CustomDrawerContent = ({ navigation }) => {\r\n    return (\r\n        <DrawerContentScrollView\r\n            scrollEnabled={true}\r\n            contentContainerStyle={{ flex: 1 }}\r\n        >\r\n            <View\r\n                style={{\r\n                    paddingHorizontal: SIZES.radius\r\n\r\n                }}\r\n            >\r\n            </View>\r\n            {/*Close*/}\r\n            <View\r\n                style={{\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'center',\r\n                    backgroundColor: COLORS.green\r\n                }}\r\n            >\r\n                <TouchableOpacity\r\n                    style={{\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center'\r\n                    }}\r\n                    onPress={() => navigation.closeDrawer()}\r\n                >\r\n                    <Image\r\n                        source={icons.cross}\r\n                        style={{\r\n                            height: 35,\r\n                            width: 35,\r\n                            tintColor: COLORS.white\r\n                        }}\r\n                    />\r\n\r\n                </TouchableOpacity>\r\n                {/*Profile*/}\r\n\r\n                <TouchableOpacity\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        marginTop: SIZES.radius,\r\n                        alignItems: 'center'\r\n                    }}\r\n                    onPress={() => console.log(\"Profile\")}\r\n                >\r\n                    <Image\r\n                        source={dummyData.myProfile?.profile_image}\r\n                        style={{\r\n                            width: 50,\r\n                            height: 50,\r\n                            borderRadius: SIZES.radius\r\n                        }}\r\n\r\n                    />\r\n\r\n                    <View\r\n                        style={{\r\n                            marginLeft: SIZES.radius\r\n\r\n                        }}\r\n                    >\r\n\r\n                        <Text\r\n                            style={{\r\n                                color: COLORS.white,\r\n                                ...FONTS.h3\r\n                            }}\r\n                        >{dummyData.myProfile?.name}\r\n                        </Text>\r\n\r\n                        <Text\r\n                            style={{\r\n                                color: COLORS.white,\r\n                                ...FONTS.body4\r\n                            }}\r\n                        >\r\n                            View your Profile\r\n                        </Text>\r\n\r\n                    </View>\r\n                </TouchableOpacity>\r\n                {/*Drawer Items*/}\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        marginTop: SIZES.padding\r\n                    }}\r\n                >\r\n                    <CustomDrawerItem\r\n                        label={constants.screens.home}\r\n                        icon={icons.home}\r\n                    />\r\n\r\n                    <CustomDrawerItem\r\n                        label={constants.screens.my_wallet}\r\n                        icon={icons.wallet}\r\n                    />\r\n\r\n                    <CustomDrawerItem\r\n                        label={constants.screens.notification}\r\n                        icon={icons.notification}\r\n                    />\r\n\r\n                    <CustomDrawerItem\r\n                        label={constants.screens.favourite}\r\n                        icon={icons.favourite}\r\n                    />\r\n\r\n                    <View\r\n                        style={{\r\n                            height: 1,\r\n                            marginVertical: SIZES.radius,\r\n                            marginLeft: SIZES.radius,\r\n                            backgroundColor: COLORS.lightGray1\r\n                        }}\r\n                    />\r\n                    <CustomDrawerItem\r\n                        label=\"Track your Order\"\r\n                        icon={icons.location}\r\n                    />\r\n\r\n                    <CustomDrawerItem\r\n                        label=\"Coupons\"\r\n                        icon={icons.coupon}\r\n                    />\r\n\r\n                    <CustomDrawerItem\r\n                        label={constants.screens.cart}\r\n                        icon={icons.cart}\r\n                    />\r\n\r\n                    <CustomDrawerItem\r\n                        label=\"Settings\"\r\n                        icon={icons.setting}\r\n                    />\r\n\r\n                    <CustomDrawerItem\r\n                        label=\"Invite a Friend\"\r\n                        icon={icons.profile}\r\n                    />\r\n\r\n                    <CustomDrawerItem\r\n                        label=\"Help Center\"\r\n                        icon={icons.help}\r\n                    />\r\n                </View>\r\n\r\n                <View\r\n                    style={{\r\n                        marginBottom: SIZES.padding\r\n                    }}\r\n                >\r\n                    <CustomDrawerItem\r\n                        label=\"Log Out\"\r\n                        icon={icons.logout}\r\n                    />\r\n\r\n                </View>\r\n            </View>\r\n        </DrawerContentScrollView >\r\n    )\r\n}\r\n\r\nconst CustomDrawer = () => {\r\n    const [progress, setProgress] = React.useState(new Animated.Value(0))\r\n\r\n    const scale = Animated.interpolateNode(progress, {\r\n        inputRange: [0, 10],\r\n        outputRange: [1, 0]\r\n    })\r\n\r\n    const borderRadius = Animated.interpolateNode(progress, {\r\n        inputRange: [0, 1],\r\n        outputRange: [0, 26]\r\n    })\r\n\r\n    const animatedStyle = { borderRadius, transform: [{ scale }] }\r\n    return (\r\n        <View\r\n            style={{\r\n                flex: 1,\r\n                backgroundColor: 'transparent'\r\n\r\n            }}\r\n        >\r\n            <Drawer.Navigator\r\n                screenOptions={{\r\n                    drawerType: 'slide',\r\n                    overlayColor: 'transparent',\r\n                    sceneContainerStyle: {\r\n                        backgroundColor: 'transparent'\r\n                    },\r\n                    drawerStyle: {\r\n                        width: '65%',\r\n                        flex: 1,\r\n                        paddingRight: 20,\r\n                        backgroundColor: 'transparent'\r\n                    }\r\n                }}\r\n\r\n                initialRouteName=\"MainLayout\"\r\n                drawerContent={props => {\r\n                    setTimeout(() => {\r\n                        setProgress(props.progress)\r\n                    }, 0)\r\n                    return (\r\n                        <CustomDrawerContent\r\n                            navigation={props.navigation}\r\n                        />\r\n                    )\r\n                }}\r\n\r\n            >\r\n                <Drawer.Screen name=\"Freshmeals\">\r\n                    {props => <MainLayout {...props}\r\n                        drawerAnimationStyle={animatedStyle}\r\n                    />}\r\n                </Drawer.Screen>\r\n\r\n\r\n            </Drawer.Navigator>\r\n        </View >\r\n    )\r\n}\r\n\r\nexport default CustomDrawer;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}